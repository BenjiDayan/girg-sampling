name: Build and test package

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Linting
        run: |
          pip install pre-commit
          pre-commit run --all-files

  test:
    needs: lint
    name: Build and test on ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache the environment
        uses: actions/cache@v2
        with:
          path: |
            .env
            .poetry
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install poetry
        run: |
          python get-poetry.py -y
          source $HOME/.poetry/env
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config cache-dir ~/.poetry/cache
          poetry -V
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Build and install the library
        run: |
          poetry build
          poetry install
      - name: Test with pytest
        run: |
          pytest
